--Ex1
SELECT DISTINCT CITY FROM STATION
WHERE ID % 2 = 0

--Ex2
SELECT COUNT(CITY) - COUNT(DISTINCT CITY) FROM STATION

--Ex3
SELECT CEIL( AVG (SALARY) - AVG ( REPLACE( SALARY, '0', ''))) FROM EMPLOYEES

--Ex4
SELECT 
ROUND(CAST(SUM(ITEM_COUNT*ORDER_OCCURRENCES)/SUM(ORDER_OCCURRENCES) AS DECIMAL),1) AS MEAN
FROM ITEMS_PER_ORDER

--Ex5
SELECT CANDIDATE_ID
FROM CANDIDATES
WHERE SKILL IN ('PYTHON','TABLEAU','POSTGRESQL')
GROUP BY CANDIDATE_ID
HAVING COUNT (SKILL) = 3

--Ex6
SELECT USER_ID, 
DATE (MAX(POST_DATE)) - DATE (MIN(POST_DATE)) AS DAYS_BETWEEN
FROM POSTS
WHERE POST_DATE >= '2021-01-01' AND POST_DATE <= '2022-01-01' 
GROUP BY USER_ID
HAVING COUNT(POST_ID) >= 2

--Ex7
SELECT CARD_NAME,
MAX(ISSUED_AMOUNT) - MIN (ISSUED_AMOUNT) AS DIFFERENCE
FROM MONTHLY_CARDS_ISSUED
GROUP BY CARD_NAME
ORDER BY DIFFERENCE DESC

--Ex8
SELECT MANUFACTURER,
COUNT(DRUG) AS DRUG_COUNT,
ABS (SUM(COGS - TOTAL_SALES)) AS TOTAL_LOSS
FROM PHARMACY_SALES
WHERE TOTAL_SALES < COGS
GROUP BY MANUFACTURER
ORDER BY TOTAL_LOSS DESC

--Ex9
SELECT * FROM CINEMA
WHERE ID % 2 = 1 AND DESCRIPTION <> 'BORING'
ORDER BY RATING DESC

--Ex10
SELECT TEACHER_ID,
COUNT (DISTINCT SUBJECT_ID) AS CNT
FROM TEACHER
GROUP BY TEACHER_I

--Ex11
SELECT USER_ID, 
COUNT (FOLLOWER_ID) AS FOLLOWERS_COUNT
FROM FOLLOWERS
GROUP BY USER_ID

--Ex12
SELECT CLASS
FROM COURSES
GROUP BY CLASS
HAVING COUNT (STUDENT) >=5
