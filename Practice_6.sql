--Ex1
WITH JOB_COUNT_CTE AS (
SELECT COMPANY_ID, TITLE, DESCRIPTION, 
COUNT(JOB_ID) AS JOB_COUNT
FROM JOB_LISTINGS
GROUP BY COMPANY_ID, TITLE, DESCRIPTION)

SELECT COUNT(DISTINCT COMPANY_ID) AS DUPLICATE_COMPANIES
FROM JOB_COUNT_CTE
WHERE JOB_COUNT > 1

--Ex2
SELECT CATEGORY, PRODUCT, TOTAL_SPEND
FROM (SELECT CATEGORY, PRODUCT, 
SUM(SPEND) AS TOTAL_SPEND,
RANK() OVER (
PARTITION BY CATEGORY 
ORDER BY SUM(SPEND) DESC) AS RANKING 
FROM PRODUCT_SPEND
WHERE EXTRACT(YEAR FROM TRANSACTION_DATE) = 2022
GROUP BY CATEGORY, PRODUCT) AS RANKED_SPENDING
WHERE RANKING <= 2 
ORDER BY CATEGORY, RANKING

--Ex3
SELECT COUNT(POLICY_HOLDER_ID) AS POLICY_HOLDER_COUNT
FROM (SELECT POLICY_HOLDER_ID,
COUNT(CASE_ID) AS CALL_COUNT
FROM CALLERS
GROUP BY POLICY_HOLDER_ID
HAVING COUNT(CASE_ID) >= 3
) AS CALL_RECORDS

--Ex4
SELECT PAGES.PAGE_ID
FROM PAGES
LEFT JOIN PAGE_LIKES AS LIKES
ON PAGES.PAGE_ID = LIKES.PAGE_ID
WHERE LIKES.PAGE_ID IS NULL

--Ex5
SELECT 
EXTRACT(MONTH FROM CURR_MONTH.EVENT_DATE) AS MTH, 
COUNT(DISTINCT CURR_MONTH.USER_ID) AS MONTHLY_ACTIVE_USERS 
FROM user_actions AS CURR_MONTH
WHERE EXISTS (SELECT LAST_MONTH.USER_ID 
FROM USER_ACTIONS AS LAST_MONTH
WHERE LAST_MONTH.USER_ID = CURR_MONTH.USER_ID
AND EXTRACT(MONTH FROM LAST_MONTH.EVENT_DATE) =
EXTRACT(MONTH FROM CURR_MONTH.EVENT_DATE - INTERVAL '1 month'))
AND EXTRACT(MONTH FROM CURR_MONTH.EVENT_DATE) = 7
AND EXTRACT(YEAR FROM CURR_MONTH.EVENT_DATE) = 2022
GROUP BY EXTRACT(MONTH FROM CURR_MONTH.EVENT_DATE)

--Ex6
SELECT DATE_FORMAT(TRANS_DATE, '%Y-%m') AS MONTH, COUNTRY,
COUNT(1) AS TRANS_COUNT,
COUNT(IF(STATE = 'APPROVED', 1, NULL)) AS APPROVED_COUNT,
SUM(AMOUNT) AS TRANS_TOTAL_AMOUNT,
SUM(IF(STATE = 'APPROVED', AMOUNT, 0)) AS APPROVED_TOTAL_AMOUNT
FROM TRANSACTIONS
GROUP BY MONTH, COUNTRY

--Ex7
SELECT PRODUCT_ID, YEAR AS FIRST_YEAR, QUANTITY, PRICE
FROM SALES
WHERE (PRODUCT_ID, YEAR) IN (
SELECT PRODUCT_ID,
MIN(YEAR) AS YEAR
FROM SALES
GROUP BY PRODUCT_ID)

--Ex8
SELECT A.CUSTOMER_ID
FROM (SELECT CUSTOMER_ID, COUNT(DISTINCT PRODUCT_KEY) as NUM
FROM CUSTOMER
GROUP BY CUSTOMER_ID) A
WHERE A.NUM = (SELECT COUNT(DISTINCT PRODUCT_KEY) FROM PRODUCT)

--Ex9
SELECT EMPLOYEE_ID 
FROM EMPLOYEES
WHERE SALARY < 30000
AND MANAGER_ID NOT IN (SELECT EMPLOYEE_ID FROM EMPLOYEES)
ORDER BY EMPLOYEE_ID

--Ex10
WITH JOB_COUNT_CTE AS (
SELECT COMPANY_ID, TITLE, DESCRIPTION, 
COUNT(JOB_ID) AS JOB_COUNT
FROM JOB_LISTINGS
GROUP BY COMPANY_ID, TITLE, DESCRIPTION)

SELECT COUNT(DISTINCT COMPANY_ID) AS DUPLICATE_COMPANIES
FROM JOB_COUNT_CTE
WHERE JOB_COUNT > 1

--Ex11
SELECT RESULTS
FROM (SELECT U.NAME RESULTS
FROM MOVIERATING MR
JOIN USERS U ON MR.USER_ID = U.USER_ID
GROUP BY U.NAME
ORDER BY COUNT(MR.RATING) DESC, NAME
LIMIT 1) AS RATINGS
UNION ALL SELECT RESULTS 
FROM (SELECT M.TITLE RESULTS
FROM MOVIERATING MR2
JOIN MOVIES M ON MR2.MOVIE_ID = M.MOVIE_ID 
WHERE DATE_FORMAT(MR2.CREATED_AT, "%Y-%m") = '2020-02'
GROUP BY M.TITLE
ORDER BY AVG(MR2.RATING) DESC, M.TITLE 
LIMIT 1) MOVIE_RATINGS

--Ex12
WITH T AS (
SELECT REQUESTER_ID, ACCEPTER_ID FROM REQUESTACCEPTED
UNION
SELECT ACCEPTER_ID, REQUESTER_ID FROM REQUESTACCEPTED)
SELECT REQUESTER_ID AS ID, COUNT(ACCEPTER_ID) AS NUM
FROM T
GROUP BY 1
ORDER BY 2 DESC
LIMIT 1
